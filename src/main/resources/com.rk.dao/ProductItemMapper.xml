<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rk.dao.ProductItemMapper">
    <cache eviction="LRU" type="com.rk.common.cache.MybatisRedisCache" />
    <resultMap id="BaseResultMap" type="com.rk.entity.ProductItem">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result property="itemName" column="itemName" javaType="String" jdbcType="VARCHAR"/>
        <result property="itemCode" column="itemCode" javaType="String" jdbcType="VARCHAR"/>
        <result property="itemInfo" column="itemInfo" javaType="String" jdbcType="VARCHAR"/>
        <result property="image" column="image" javaType="String" jdbcType="VARCHAR"/>
        <result property="productId" column="productId" javaType="Long" jdbcType="BIGINT"/>
        <result property="price" column="price" javaType="Double" jdbcType="DECIMAL"/>
    </resultMap>
    <select id="getByPrimaryKey" resultMap="BaseResultMap">
        SELECT * FROM product_item WHERE id = #{id}
    </select>

    <select id="getByProductId" resultMap="BaseResultMap">
        SELECT * FROM product_item WHERE productId = #{productId}
    </select>

    <sql id="pageWhere">
        <where>
            <!--<if test="queryString != null and queryString != ''">
                AND xxxx LIKE CONCAT('%', #{queryString}, '%')
            </if>-->
        </where>
    </sql>

    <select id="getPageList" resultMap="BaseResultMap">
        <bind name="offest" value="(page-1)*limit"></bind>
        SELECT * FROM product_item
        <include refid="pageWhere"></include>
        ORDER BY id LIMIT #{offest}, #{limit}
    </select>

    <select id="getPageListTotalCount" resultType="int">
        SELECT count(*) FROM product_item
        <include refid="pageWhere"></include>
    </select>

    <insert id="insert">
        INSERT INTO product_item (
            itemName,
            itemCode,
            itemInfo,
            image,
            productId,
            price
        )
        VALUES
        (
            #{itemName},
            #{itemCode},
            #{itemInfo},
            #{image},
            #{productId},
            #{price}
        )
    </insert>

    <update id="update">
        UPDATE product_item
        <set>
            itemName = #{itemName},
            itemCode = #{itemCode},
            itemInfo = #{itemInfo},
            image = #{image},
            productId = #{productId},
            price = #{price}
        </set>
        WHERE
        id = #{id}
    </update>

    <delete id="delete">
        <choose>
            <when test="null != array and array.length > 1">
                DELETE FROM product_item WHERE id IN
                <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                DELETE FROM product_item WHERE id = #{array[0]}
            </otherwise>
        </choose>
    </delete>

</mapper>
