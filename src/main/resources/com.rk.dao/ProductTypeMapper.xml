<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rk.dao.ProductTypeMapper">
    <resultMap id="BaseResultMap" type="com.rk.entity.ProductType">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <!--<result column="account" property="account" jdbcType="VARCHAR" />-->
    </resultMap>


    <!--    <select id="getPageList" resultMap="BaseResultMap">
            SELECT * FROM product_type
             <where>
                 <if test="queryString != null">
                     typeCode LIKE CONCAT('%', #{queryString}, '%') OR typeName LIKE CONCAT('%', #{queryString}, '%')
                 </if>
             </where>
            ORDER BY id LIMIT #{skip}, #{limit}
        </select>-->

    <select id="getPageList" resultMap="BaseResultMap">
        <bind name="queryStringPattern" value="'%' + queryString + '%'"></bind>
        SELECT * FROM product_type
        <where>
            <if test="queryString != null and queryString != ''">
                typeCode LIKE #{queryStringPattern} OR typeName LIKE #{queryStringPattern}
            </if>
        </where>
        ORDER BY id LIMIT #{skip}, #{limit}
    </select>

    <select id="getPageListTotalCount" resultType="int">
        SELECT count(*) FROM product_type
    </select>

    <select id="getProductTypeById" resultMap="BaseResultMap">
        SELECT * FROM product_type WHERE id = #{id}
    </select>

    <update id="update" parameterType="com.rk.entity.ProductType">
        UPDATE product_type AS p SET p.typeName = #{typeName}, p.typeCode = #{typeCode}, p.parentTypeId = #{parentTypeId},
        p.status = #{status} WHERE p.id = #{id}
    </update>

    <select id="getProductTypeByNameOrCode" resultMap="BaseResultMap">
        SELECT * FROM product_type AS p WHERE p.typeName = #{typeName} OR p.typeCode = #{typeCode} LIMIT 1
    </select>

    <delete id="delete">
        DELETE FROM product_type WHERE id IN
        <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <insert id="insert">
        INSERT INTO product_type(typeName, typeCode, parentTypeId, status) VALUES (#{typeName}, #{typeCode}, NULL, #{status
        })
    </insert>

</mapper>